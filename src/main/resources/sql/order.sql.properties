sql.create=INSERT INTO orders (id, apartment_id, request_id, price, payed) VALUES (DEFAULT, ?, ?, ?, ?);
sql.update=UPDATE orders SET apartment_id = ?, request_id = ?, price = ?, payed = ? WHERE id = ?;
sql.getById=SELECT \
  o.id, \
  o.apartment_id, \
  o.request_id, \
  o.price, \
  o.payed, \
  r.from_date, \
  r.to_date, \
  a.name, \
  a.room_count, \
  a.apartment_type_id, \
  at.name \
FROM orders o \
INNER JOIN apartments a ON a.id = o.apartment_id \
INNER JOIN apartment_types at ON at.id = a.apartment_type_id \
INNER JOIN requests r ON r.id = o.request_id \
WHERE o.id = ?;
sql.deleteById=DELETE FROM orders WHERE id = ?;
sql.list=SELECT o.id, o.apartment_id, o.request_id, o.price, o.payed, r.user_id \
FROM orders o \
INNER JOIN requests r ON r.id = o.request_id \
LIMIT %s \
OFFSET %s;
sql.count=SELECT COUNT(*) FROM orders;
sql.user.orders=\
SELECT o.id, o.apartment_id, o.request_id, o.price, o.payed \
FROM orders o \
INNER JOIN requests r ON r.id = o.request_id \
WHERE r.user_id = ? \
ORDER BY o.id \
LIMIT %s \
OFFSET %s;
sql.user.orders.count=\
SELECT COUNT(*) \
FROM orders o \
  INNER JOIN requests r ON r.id = o.request_id \
WHERE r.user_id = ?;