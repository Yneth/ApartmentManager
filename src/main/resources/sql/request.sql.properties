sql.create=INSERT INTO requests (id, user_id, room_count, apartment_type_id, from_date, to_date, status_id) \
VALUES (DEFAULT, ?, ?, ?, ?, ?, ?);
sql.update=\
  UPDATE requests SET user_id = ?, room_count = ?, apartment_type_id = ?, from_date = ?, to_date = ?, status_id = ?\
, status_comment = ? WHERE id = ?
sql.getById=\
  SELECT q.id, q.user_id, q.room_count, q.apartment_type_id, at.name, q.from_date, q.to_date, q.status_id, q.status_comment \
FROM requests q \
INNER JOIN apartment_types at ON at.id = q.apartment_type_id \
WHERE q.id = ?;
sql.deleteById=DELETE FROM requests WHERE id = ?;
sql.list=\
  SELECT q.id, q.user_id, q.room_count, q.apartment_type_id, at.name, q.from_date, q.to_date, q.status_id, q.status_comment \
FROM requests q \
INNER JOIN apartment_types at ON at.id = q.apartment_type_id \
ORDER BY q.id ASC \
LIMIT %s \
OFFSET %s;
sql.count=SELECT COUNT(*) FROM requests;
sql.user.orders=\
  SELECT q.id, q.user_id, q.room_count, q.apartment_type_id, at.name, q.from_date, q.to_date, q.status_id, q.status_comment \
FROM requests q \
INNER JOIN apartment_types at ON at.id = q.apartment_type_id \
WHERE q.user_id = ? \
ORDER BY q.id \
LIMIT %s \
OFFSET %s;
sql.user.orders.count=\
  SELECT COUNT(*) \
FROM requests q \
INNER JOIN apartment_types at ON at.id = q.apartment_type_id \
WHERE q.user_id = ?;